AppendCharToRedobuff	getchar.c	/^AppendCharToRedobuff(c)$/
AppendNumberToRedobuff	getchar.c	/^AppendNumberToRedobuff(n)$/
AppendToRedobuff	getchar.c	/^AppendToRedobuff(s)$/
CHECK	memfile.c	/^#define CHECK(c, s)	if (c) printf(s)$/
Chk_Abort	amiga.c	/^Chk_Abort()$/
Ctrl	ascii.h	/^#define Ctrl(x) ((x) & 0x1f)$/
DoOneCmd	cmdline.c	/^DoOneCmd(buff)$/
EMSG	vim.h	/^#define EMSG(s)				emsg((char_u *)(s))$/
EMSG2	vim.h	/^#define EMSG2(s, p)			emsg2((char_u *)(s), (char_u/
EMSG_RETURN	regexp.c	/^#define EMSG_RETURN(m) { emsg(m); return NULL; }$/
EXTERN	param.h	/^EXTERN char_u *p_ep	INIT(= (char_u *)"indent");	\/*/
ExpandFromContext	cmdline.c	/^ExpandFromContext(pat, num_file, file, files_only,/
ExpandOne	cmdline.c	/^ExpandOne(str, list_notfound, mode)$/
ExpandSettings	param.c	/^ExpandSettings(prog, num_file, file)$/
ExpandTags	tag.c	/^ExpandTags(prog, num_file, file)$/
ExpandWildCards	amiga.c	/^ExpandWildCards(num_pat, pat, num_file, file, file/
FreeWild	amiga.c	/^FreeWild(num, file)$/
FullName	amiga.c	/^FullName(fname, buf, len)$/
GetChars	amiga.c	/^GetChars(buf, maxlen, time)$/
INIT	normal.c	/^#define INIT(x) x$/
ISSPECIAL	edit.c	/^#define ISSPECIAL(c)	((c) < ' ' || (c) >= DEL)$/
MEMHASH	structs.h	/^#define MEMHASH(nr)		((nr) & (MEMHASHSIZE - 1))$/
ML_SIMPLE	memline.c	/^#define ML_SIMPLE(x)	(x & 0x10)	\/* DEL, INS or FIN/
MP	amiga.c	/^#define MP(xx)	((struct MsgPort *)((struct FileHan/
MSG	vim.h	/^#define MSG(s)				msg((char_u *)(s))$/
Maddcr	addcr.c	/^main(argc, argv)$/
Magic	regexp.c	/^#define Magic(x)	((x)|('\\\\'<<8))$/
Meta	ascii.h	/^#define Meta(x) ((x) | 0x80)$/
Mmain	main.c	/^main(argc, argv)$/
Mmkcmdtab	mkcmdtab.c	/^main(argc, argv)$/
NEXT	regexp.c	/^#define NEXT(p) (((*((p)+1)&0377)<<8) + (*((p)+2)&/
OP	regexp.c	/^#define OP(p)	(*(p))$/
OPERAND	regexp.c	/^#define OPERAND(p)		((p) + 3)$/
OUTSTR	vim.h	/^#define OUTSTR(s)			outstr((char_u *)(s))$/
OUTSTRN	vim.h	/^#define OUTSTRN(s)			outstrn((char_u *)(s))$/
Opencmd	misccmds.c	/^Opencmd(dir, redraw, delspaces)$/
PERR	winnt.c	/^#define PERR(bSuccess, api) {if (!(bSuccess)) perr/
PeekChr	regexp.c	/^#define PeekChr() curchr	\/* shortcut only when las/
Read	archie.c	/^Read(buf, maxlen)$/
RealWaitForChar	archie.c	/^RealWaitForChar(ticks)$/
ResetRedobuff	getchar.c	/^ResetRedobuff()$/
STRCAT	vim.h	/^#define STRCAT(d, s)		strcat((char *)(d), (char *)/
STRCHR	vim.h	/^#define STRCHR(s, c)		(char_u *)strchr((char *)(s)/
STRCMP	vim.h	/^#define STRCMP(d, s)		strcmp((char *)(d), (char *)/
STRCPY	vim.h	/^#define STRCPY(d, s)		strcpy((char *)(d), (char *)/
STRLEN	vim.h	/^#define STRLEN(s)			strlen((char *)(s))$/
STRNCMP	vim.h	/^#define STRNCMP(d, s, n)	strncmp((char *)(d), (cha/
STRNCPY	vim.h	/^#define STRNCPY(d, s, n)	strncpy((char *)(d), (cha/
STRRCHR	vim.h	/^#define STRRCHR(s, c)		(char_u *)strrchr((char *)(/
TGETSTR	term.c	/^# define TGETSTR(s, p)	(char_u *)tgetstr((s), (cha/
TO_LOWER	macros.h	/^# define TO_LOWER(c)	(isupper(c) ? tolower(c) : (c/
TO_UPPER	macros.h	/^# define TO_UPPER(c)	(islower(c) ? toupper(c) : (c/
UCHARAT	regexp.c	/^#define UCHARAT(p)		((int)*(unsigned char *)(p))$/
UNCHANGED	vim.h	/^#define UNCHANGED(buf)	unset_Changed(buf)$/
WaitForChar	archie.c	/^WaitForChar(ticks)$/
__ARGS	regsub.c	/^# define __ARGS(a)	a$/
__PARMS	vim.h	/^# define __PARMS(x)	x$/
_addfmt	termlib.c	/^_addfmt(buf, fmt, val)             \/* add val to b/
_find	termlib.c	/^_find(s, set)   \/* finds next c in s that's a memb/
_match	termlib.c	/^_match(s1, s2)                 \/* returns length o/
add_buff	getchar.c	/^add_buff(buf, s)$/
add_char_buff	getchar.c	/^add_char_buff(buf, c)$/
add_num_buff	getchar.c	/^add_num_buff(buf, n)$/
addfile	msdos.c	/^addfile(fl, f, isdir)$/
addstar	cmdline.c	/^addstar(fname, len)$/
adjust_cursor	linefunc.c	/^adjust_cursor()$/
alloc	alloc.c	/^alloc(size)$/
ask_yesno	misccmds.c	/^ask_yesno(str)$/
autowrite	cmdline.c	/^autowrite(buf)$/
autowrite_all	cmdline.c	/^autowrite_all()$/
bck_word	search.c	/^bck_word(count, type)$/
beep	misccmds.c	/^beep()$/
beginline	edit.c	/^beginline(flag)$/
block_prep	ops.c	/^block_prep(lnum, delete)$/
breakcheck	amiga.c	/^breakcheck()$/
bsdmemset	alloc.c	/^bsdmemset(ptr, c, size)$/
buf_clear	buffer.c	/^buf_clear(buf)$/
buf_copy_options	param.c	/^buf_copy_options(bp_from, bp_to)$/
buf_freeall	buffer.c	/^buf_freeall(buf)$/
buf_modname	fileio.c	/^buf_modname(buf, fname, ext)$/
buf_write	fileio.c	/^buf_write(buf, fname, sfname, start, end, append, /
buf_write_all	cmdline.c	/^buf_write_all(buf)$/
bufempty	macros.h	/^#define bufempty() (curbuf->b_ml.ml_flags & ML_EMP/
buflist_add	buffer.c	/^buflist_add(fname)$/
buflist_altlnum	buffer.c	/^buflist_altlnum()$/
buflist_findlnum	buffer.c	/^buflist_findlnum(buf)$/
buflist_findname	buffer.c	/^buflist_findname(fname)$/
buflist_findnr	buffer.c	/^buflist_findnr(nr)$/
buflist_getfile	buffer.c	/^buflist_getfile(n, lnum, setpm)$/
buflist_getlnum	buffer.c	/^buflist_getlnum()$/
buflist_list	buffer.c	/^buflist_list()$/
buflist_name_nr	buffer.c	/^buflist_name_nr(fnum, fname, lnum)$/
buflist_new	buffer.c	/^buflist_new(fname, sfname, lnum, use_curbuf)$/
buflist_nr2name	buffer.c	/^buflist_nr2name(n)$/
buflist_setlnum	buffer.c	/^buflist_setlnum(buf, lnum)$/
bzero	unix.c	/^#  define bzero(a, b)	memset((a), 0, (b))$/
call_shell	amiga.c	/^call_shell(cmd, filter, cooked)$/
catch_cbrk	msdos.c	/^catch_cbrk()$/
catch_cint	msdos.c	/^catch_cint(bp, di, si, ds, es, dx, cx, bx, ax)$/
cbrk_handler	msdos.c	/^cbrk_handler()$/
ccheck_abbr	cmdline.c	/^ccheck_abbr(c)$/
change_drive	msdos.c	/^change_drive(drive)$/
change_warning	misccmds.c	/^change_warning()$/
charsize	charset.c	/^charsize(c)$/
chartabsize	charset.c	/^chartabsize(c, col)$/
check_abbr	getchar.c	/^check_abbr(c, ptr, col, mincol)$/
check_changed	cmdline.c	/^check_changed(buf, checkaw, mult_win)$/
check_changed_any	cmdline.c	/^check_changed_any(checkaw)$/
check_cursor	screen.c	/^check_cursor()$/
check_fname	cmdline.c	/^check_fname()$/
check_more	cmdline.c	/^check_more(message)$/
check_readonly	cmdline.c	/^check_readonly()$/
check_status	misccmds.c	/^check_status(buf)$/
check_termcode	term.c	/^check_termcode(buf)$/
check_win	amiga.c	/^check_win(argc, argv)$/
check_winsize	term.c	/^check_winsize()$/
checkclearop	normal.c	/^checkclearop()$/
checkclearopq	normal.c	/^checkclearopq()$/
checknextcomm	cmdline.c	/^checknextcomm(arg)$/
checkpcmark	mark.c	/^checkpcmark()$/
chk_mline	fileio.c	/^chk_mline(lnum)$/
clear_termparam	param.c	/^clear_termparam()$/
clearopbeep	normal.c	/^clearopbeep()$/
close_buffer	buffer.c	/^close_buffer(buf, free_buf, remove)$/
close_others	window.c	/^close_others(message)$/
close_window	window.c	/^close_window(free_buf)$/
clrallmarks	mark.c	/^clrallmarks(buf)$/
clreol	winnt.c	/^clreol()$/
clrscr	winnt.c	/^clrscr()$/
cls	search.c	/^cls()$/
coladvance	linefunc.c	/^coladvance(wcol)$/
command_height	window.c	/^command_height()$/
comp_Botline	screen.c	/^comp_Botline(wp)$/
comp_Botline_all	screen.c	/^comp_Botline_all()$/
comp_col	param.c	/^comp_col()$/
compute_cmdrow	cmdline.c	/^compute_cmdrow()$/
copy_redo	getchar.c	/^copy_redo()$/
copy_spaces	alloc.c	/^copy_spaces(ptr, count)$/
cstrchr	regexp.c	/^cstrchr(s, c)$/
cstrncmp	regexp.c	/^cstrncmp(s1, s2, n)$/
curs_columns	screen.c	/^curs_columns(scroll)$/
cursor_off	term.c	/^cursor_off()$/
cursor_on	term.c	/^cursor_on()$/
cursor_visible	winnt.c	/^cursor_visible(int visible)$/
cursorcmd	cmdline.c	/^cursorcmd()$/
cursupdate	screen.c	/^cursupdate()$/
dec	linefunc.c	/^dec(lp)$/
dec_cursor	linefunc.c	/^dec_cursor()$/
decl	linefunc.c	/^decl(lp)$/
del_spaces	alloc.c	/^del_spaces(ptr)$/
del_typestr	getchar.c	/^del_typestr(len)$/
delay	winnt.c	/^delay(x)$/
delchar	misccmds.c	/^delchar(fixpos)$/
delline	winnt.c	/^delline(int count)$/
dellines	misccmds.c	/^dellines(nlines, dowindow, undo)$/
delmode	screen.c	/^delmode()$/
dirname	archie.c	/^dirname(buf, len)$/
dis_msg	ops.c	/^dis_msg(p, skip_esc)$/
do_Copy	regsub.c	/^do_Copy(d, c)$/
do_Lower	regsub.c	/^do_Lower(d, c)$/
do_Upper	regsub.c	/^do_Upper(d, c)$/
do_align	cmdcmds.c	/^do_align(start, end, width, type)$/
do_arg_all	buffer.c	/^do_arg_all()$/
do_buffer	buffer.c	/^do_buffer(action, start, dir, count, forceit)$/
do_buffer_all	buffer.c	/^do_buffer_all(all)$/
do_copy	cmdcmds.c	/^do_copy(line1, line2, n)$/
do_lower	regsub.c	/^do_lower(d, c)$/
do_mlines	fileio.c	/^do_mlines()$/
do_move	cmdcmds.c	/^do_move(line1, line2, n)$/
do_upper	regsub.c	/^do_upper(d, c)$/
do_window	window.c	/^do_window(nchar, Prenum)$/
doaddsub	ops.c	/^doaddsub(command, Prenum1)$/
doarglist	cmdline.c	/^doarglist(str)$/
dobang	cmdcmds.c	/^dobang(addr_count, line1, line2, forceit, arg)$/
dochange	ops.c	/^dochange()$/
docmdline	cmdline.c	/^docmdline(cmdline)$/
dodelete	ops.c	/^dodelete()$/
dodigraph	digraph.c	/^dodigraph(c)$/
dodis	ops.c	/^dodis()$/
dodojoin	ops.c	/^dodojoin(count, insert_space, redraw)$/
doecmd	cmdline.c	/^doecmd(fname, sfname, command, hide, newlnum)$/
doexecbuf	ops.c	/^doexecbuf(c)$/
dofilter	cmdcmds.c	/^dofilter(line1, line2, buff, do_in, do_out)$/
doformat	ops.c	/^doformat()$/
doglob	csearch.c	/^doglob(type, lp, up, cmd)$/
dojoin	ops.c	/^dojoin(insert_space, redraw)$/
dojumps	mark.c	/^dojumps()$/
domake	cmdline.c	/^domake(arg)$/
domap	getchar.c	/^domap(maptype, keys, mode)$/
domarks	mark.c	/^domarks()$/
doput	ops.c	/^doput(dir, count, fix_indent)$/
dorecord	ops.c	/^dorecord(c)$/
dos_packet	amiga.c	/^dos_packet(pid, action, arg)$/
dosearch	search.c	/^dosearch(dirc, str, reverse, count, echo, message)/
doset	param.c	/^doset(arg)$/
doshell	cmdcmds.c	/^doshell(cmd)$/
doshift	ops.c	/^doshift(op, curs_top, amount)$/
dosource	cmdline.c	/^dosource(fname)$/
dosub	csearch.c	/^dosub(lp, up, cmd, nextcommand, use_old)$/
dotag	tag.c	/^dotag(tag, type, count)$/
dotags	tag.c	/^dotags()$/
dotilde	ops.c	/^dotilde()$/
dowrite	cmdline.c	/^dowrite(fname, append)$/
doyank	ops.c	/^doyank(deleting)$/
echeck_abbr	edit.c	/^echeck_abbr(c)$/
edit	edit.c	/^edit(count)$/
emsg	message.c	/^emsg(s)$/
emsg2	message.c	/^emsg2(s, a1)$/
end_word	search.c	/^end_word(count, type, stop)$/
enter_buffer	buffer.c	/^enter_buffer(buf)$/
equal	macros.h	/^#define equal(a, b) (((a).lnum == (b).lnum) && ((a/
expand_env	misccmds.c	/^expand_env(src, dst, dstlen)$/
expandpath	msdos.c	/^expandpath(fl, path, fonly, donly, notf)$/
file_name_at_cursor	window.c	/^file_name_at_cursor()$/
fileinfo	buffer.c	/^fileinfo(fullname)$/
filemess	fileio.c	/^filemess(name, s)$/
fill_inbuf	archie.c	/^fill_inbuf()$/
findfunc	search.c	/^findfunc(dir, what, count)$/
findpar	search.c	/^findpar(dir, count, what, both)$/
findparam	param.c	/^findparam(arg)$/
findsent	search.c	/^findsent(dir, count)$/
findswapname	memline.c	/^findswapname(buf, second_try)$/
findtag	tag.c	/^findtag(tag)$/
fix_fname	buffer.c	/^fix_fname(fname)$/
flush_buffers	getchar.c	/^flush_buffers(typeahead)$/
flushbuf	term.c	/^flushbuf()$/
fm_getname	mark.c	/^fm_getname(fmark)$/
fname_case	amiga.c	/^fname_case(name)$/
fname_expand	buffer.c	/^fname_expand(fname, sfname)$/
fnamecmp	vim.h	/^# define fnamecmp(x, y) stricmp((char *)(x), (char/
free	vim.h	/^# define free(x)	nofreeNULL(x)$/
free_buff	getchar.c	/^free_buff(buf)$/
free_yank	ops.c	/^free_yank(n)$/
free_yank_all	ops.c	/^free_yank_all()$/
freefiles	amiga.c	/^freefiles()$/
fstatfs	memfile.c	/^# define fstatfs(fd, buf, len, nul) fstat((fd), (b/
fullpathcmp	misccmds.c	/^fullpathcmp(s1, s2)$/
fwd_word	search.c	/^fwd_word(count, type, eol)$/
gchar	misccmds.c	/^gchar(pos)$/
gchar_cursor	misccmds.c	/^gchar_cursor()$/
get_address	cmdline.c	/^get_address(ptr)$/
get_bufcont	getchar.c	/^get_bufcont(buffer, dozero)$/
get_fib	amiga.c	/^get_fib(fname)$/
get_indent	misccmds.c	/^get_indent()$/
get_inserted	getchar.c	/^get_inserted()$/
get_last_insert	edit.c	/^get_last_insert()$/
get_literal	edit.c	/^get_literal(nextc)$/
get_recorded	getchar.c	/^get_recorded()$/
get_varp	param.c	/^get_varp(p)$/
get_x11_icon	unix.c	/^get_x11_icon()$/
get_x11_title	unix.c	/^get_x11_title()$/
get_x11_windis	unix.c	/^get_x11_windis()$/
get_yank_buffer	ops.c	/^get_yank_buffer(writing)$/
getargcmd	cmdline.c	/^getargcmd(argp)$/
getchr	regexp.c	/^getchr()$/
getcmdline	cmdline.c	/^getcmdline(firstc, buff)$/
getdigits	misccmds.c	/^getdigits(pp)$/
getdigraph	digraph.c	/^getdigraph(char1, char2, meta)$/
getent	termlib.c	/^getent(tbuf, term, termcap, buflen)$/
getfile	cmdline.c	/^getfile(fname, sfname, setpm, lnum)$/
getlinecol	term.c	/^getlinecol()$/
getmark	mark.c	/^getmark(c, changefile)$/
getout	main.c	/^getout(r)$/
getperm	amiga.c	/^getperm(name)$/
gettail	misccmds.c	/^gettail(fname)$/
getvcol	screen.c	/^getvcol(wp, pos, type)$/
gotchars	getchar.c	/^gotchars(s, len)$/
gotocmdend	cmdline.c	/^gotocmdend()$/
gotocmdline	cmdline.c	/^gotocmdline(clr, firstc)$/
gotoxy	winnt.c	/^gotoxy(x, y)$/
handler_routine	winnt.c	/^BOOL WINAPI     handler_routine(DWORD dwCtrlType)$/
has_wildcard	amiga.c	/^has_wildcard(p)$/
have_wildcard	archie.c	/^have_wildcard(num, file)$/
help	help.c	/^help()$/
home_replace	misccmds.c	/^home_replace(src, dst, dstlen)$/
inc	linefunc.c	/^inc(lp)$/
inc_cursor	linefunc.c	/^inc_cursor()$/
inchar	term.c	/^inchar(buf, maxlen, time)$/
incl	linefunc.c	/^incl(lp)$/
inindent	misccmds.c	/^inindent()$/
init_typestr	getchar.c	/^init_typestr()$/
init_yank	ops.c	/^init_yank()$/
initchr	regexp.c	/^initchr(str)$/
inmacro	search.c	/^inmacro(opt, s)$/
ins_typestr	getchar.c	/^ins_typestr(str, noremap)$/
inschar	misccmds.c	/^inschar(c)$/
insertbuf	ops.c	/^insertbuf(c)$/
insertchar	edit.c	/^insertchar(c)$/
insfile	amiga.c	/^insfile(name, isdir)$/
insline	winnt.c	/^insline(int count)$/
insstr	misccmds.c	/^insstr(s)$/
isFullName	amiga.c	/^isFullName(fname)$/
is_yank_buffer	ops.c	/^is_yank_buffer(c, write)$/
isdir	amiga.c	/^isdir(name)$/
isidchar	charset.c	/^isidchar(c)$/
iskeypad	winnt.c	/^#define iskeypad(x)	(KEYPADLO <= (x) && (x) <= KEY/
ismult	regexp.c	/^ismult(c)$/
ispathsep	misccmds.c	/^ispathsep(c)$/
isspace	vim.h	/^# define isspace(x)  (((x) >= 9 && (x) <= 13) || (/
istermparam	param.c	/^istermparam(p)$/
iswhite	vim.h	/^#define iswhite(x)	((x) == ' ' || (x) == '\\t')$/
kbhit	winnt.c	/^int             kbhit()$/
lalloc	alloc.c	/^lalloc(size, message)$/
last_status	window.c	/^last_status()$/
lineempty	macros.h	/^#define lineempty(p) (*ml_get(p) == NUL)$/
listdigraphs	digraph.c	/^listdigraphs()$/
lock2name	amiga.c	/^lock2name(lock, buf, len)$/
lt	macros.h	/^#define lt(a, b) (((a).lnum != (b).lnum) \\$/
ltoreq	macros.h	/^#define ltoreq(a, b) (((a).lnum != (b).lnum) \\$/
make_windows	window.c	/^make_windows(count)$/
makemap	getchar.c	/^makemap(fd)$/
makeset	param.c	/^makeset(fd)$/
makeswapname	memline.c	/^makeswapname(buf, second_try)$/
maketitle	buffer.c	/^maketitle()$/
mark_adjust	mark.c	/^mark_adjust(line1, line2, inc)$/
mch_avail_mem	amiga.c	/^mch_avail_mem(special)$/
mch_char_avail	amiga.c	/^mch_char_avail()$/
mch_get_winsize	amiga.c	/^mch_get_winsize()$/
mch_restore_title	amiga.c	/^mch_restore_title(which)$/
mch_screenmode	amiga.c	/^mch_screenmode(arg)$/
mch_set_winsize	amiga.c	/^mch_set_winsize()$/
mch_settitle	amiga.c	/^mch_settitle(title, icon)$/
mch_settmode	amiga.c	/^mch_settmode(raw)$/
mch_suspend	amiga.c	/^mch_suspend()$/
mch_windexit	amiga.c	/^mch_windexit(r)$/
mch_windinit	amiga.c	/^mch_windinit()$/
mch_write	amiga.c	/^mch_write(p, len)$/
memmove	alloc.c	/^memmove(desti, source, len)$/
memset	unix.h	/^# define memset(ptr, c, size)	bsdmemset((ptr), (c)/
mf_alloc_bhdr	memfile.c	/^mf_alloc_bhdr(mfp, page_count)$/
mf_close	memfile.c	/^mf_close(mfp, delete)$/
mf_do_open	memfile.c	/^mf_do_open(mfp, fname, new)$/
mf_find_hash	memfile.c	/^mf_find_hash(mfp, nr)$/
mf_free	memfile.c	/^mf_free(mfp, hp)$/
mf_free_bhdr	memfile.c	/^mf_free_bhdr(hp)$/
mf_fullname	memfile.c	/^mf_fullname(mfp)$/
mf_get	memfile.c	/^mf_get(mfp, nr, page_count)$/
mf_ins_free	memfile.c	/^mf_ins_free(mfp, hp)$/
mf_ins_hash	memfile.c	/^mf_ins_hash(mfp, hp)$/
mf_ins_used	memfile.c	/^mf_ins_used(mfp, hp)$/
mf_need_trans	memfile.c	/^mf_need_trans(mfp)$/
mf_new	memfile.c	/^mf_new(mfp, negative, page_count)$/
mf_open	memfile.c	/^mf_open(fname, new, fail_nofile)$/
mf_open_file	memfile.c	/^mf_open_file(mfp, fname)$/
mf_put	memfile.c	/^mf_put(mfp, hp, dirty, infile)$/
mf_read	memfile.c	/^mf_read(mfp, hp)$/
mf_release	memfile.c	/^mf_release(mfp, page_count)$/
mf_release_all	memfile.c	/^mf_release_all()$/
mf_rem_free	memfile.c	/^mf_rem_free(mfp)$/
mf_rem_hash	memfile.c	/^mf_rem_hash(mfp, hp)$/
mf_rem_used	memfile.c	/^mf_rem_used(mfp, hp)$/
mf_statistics	memfile.c	/^mf_statistics()$/
mf_sync	memfile.c	/^mf_sync(mfp, all, check_char)$/
mf_trans_add	memfile.c	/^mf_trans_add(mfp, hp)$/
mf_trans_del	memfile.c	/^mf_trans_del(mfp, old)$/
mf_write	memfile.c	/^mf_write(mfp, hp)$/
mktemp	cmdcmds.c	/^# define mktemp(a)	tmpnam(a)$/
ml_add_stack	memline.c	/^ml_add_stack(buf)$/
ml_append	memline.c	/^ml_append(lnum, line, len, newfile)$/
ml_append_int	memline.c	/^ml_append_int(buf, lnum, line, len, newfile)$/
ml_clearmarked	memline.c	/^ml_clearmarked()$/
ml_close	memline.c	/^ml_close(buf)$/
ml_close_all	memline.c	/^ml_close_all()$/
ml_delete	memline.c	/^ml_delete(lnum)$/
ml_delete_int	memline.c	/^ml_delete_int(buf, lnum)$/
ml_find_line	memline.c	/^ml_find_line(buf, lnum, action)$/
ml_firstmarked	memline.c	/^ml_firstmarked()$/
ml_flush_line	memline.c	/^ml_flush_line(buf)$/
ml_get	memline.c	/^ml_get(lnum)$/
ml_get_buf	memline.c	/^ml_get_buf(buf, lnum, will_change)$/
ml_get_cursor	memline.c	/^ml_get_cursor()$/
ml_get_pos	memline.c	/^ml_get_pos(pos)$/
ml_has_mark	memline.c	/^ml_has_mark(lnum)$/
ml_line_alloced	memline.c	/^ml_line_alloced()$/
ml_lineadd	memline.c	/^ml_lineadd(buf, count)$/
ml_new_data	memline.c	/^ml_new_data(mfp, negative, page_count)$/
ml_new_ptr	memline.c	/^ml_new_ptr(mfp)$/
ml_open	memline.c	/^ml_open()$/
ml_open_files	memline.c	/^ml_open_files()$/
ml_preserve	memline.c	/^ml_preserve(buf, message)$/
ml_recover	memline.c	/^ml_recover()$/
ml_replace	memline.c	/^ml_replace(lnum, line, copy)$/
ml_setmarked	memline.c	/^ml_setmarked(lnum)$/
ml_sync_all	memline.c	/^ml_sync_all(check_file)$/
ml_timestamp	memline.c	/^ml_timestamp(buf)$/
modname	fileio.c	/^modname(fname, ext)$/
movemark	mark.c	/^movemark(count)$/
msg	message.c	/^msg(s)$/
msg_ceol	message.c	/^msg_ceol()$/
msg_check	message.c	/^msg_check()$/
msg_check_screen	message.c	/^msg_check_screen()$/
msg_end	message.c	/^msg_end()$/
msg_outchar	message.c	/^msg_outchar(c)$/
msg_outnum	message.c	/^msg_outnum(n)$/
msg_outstr	message.c	/^msg_outstr(s)$/
msg_outtrans	message.c	/^msg_outtrans(str, len)$/
msg_pos	message.c	/^msg_pos(row, col)$/
msg_prt_line	message.c	/^msg_prt_line(s)$/
msg_start	message.c	/^msg_start()$/
msgmore	misccmds.c	/^msgmore(n)$/
myregcomp	search.c	/^myregcomp(pat, sub_cmd, which_pat)$/
nextent	termlib.c	/^nextent(tbuf, termcap, buflen)         \/* Read 1 e/
nextwild	cmdline.c	/^nextwild(buff, type)$/
nofreeNULL	alloc.c	/^nofreeNULL(x)$/
normal	normal.c	/^normal()$/
normvideo	winnt.c	/^normvideo()$/
onedown	edit.c	/^onedown(n)$/
oneleft	edit.c	/^oneleft()$/
onepage	edit.c	/^onepage(dir, count)$/
oneright	edit.c	/^oneright()$/
oneup	edit.c	/^oneup(n)$/
open_buffer	buffer.c	/^open_buffer()$/
openscript	getchar.c	/^openscript(name)$/
otherfile	buffer.c	/^otherfile(fname)$/
outchar	term.c	/^outchar(c)$/
outnum	term.c	/^outnum(n)$/
outstr	term.c	/^outstr(s)$/
outstrn	term.c	/^outstrn(s)$/
param_expand	param.c	/^param_expand(i, dofree)$/
paramchanged	param.c	/^paramchanged(arg)$/
parse_builtin_tcap	term.c	/^parse_builtin_tcap(tc, s)$/
pchar	macros.h	/^#define pchar(lp, c) (*(ml_get_buf(curbuf, (lp).ln/
pchar_cursor	misccmds.c	/^pchar_cursor(c)$/
peekchr	regexp.c	/^peekchr()$/
perr	winnt.c	/^void            perr(PCHAR szFileName, int line, P/
plines	misccmds.c	/^plines(p)$/
plines_m	misccmds.c	/^plines_m(first, last)$/
plines_m_win	misccmds.c	/^plines_m_win(wp, first, last)$/
plines_win	misccmds.c	/^plines_win(wp, p)$/
plural	misccmds.c	/^plural(n)$/
premsg	normal.c	/^premsg(c1, c2)$/
prep_redo	normal.c	/^prep_redo(num, cmd, c, nchar)$/
printdigraph	digraph.c	/^printdigraph(p)$/
pstrcmp	msdos.c	/^pstrcmp(a, b)$/
putch	winnt.c	/^putch(char c)$/
putcmdline	cmdline.c	/^putcmdline(c, buff)$/
putdigraph	digraph.c	/^putdigraph(str)$/
putescstr	getchar.c	/^putescstr(fd, str, set)$/
qf_free	quickfix.c	/^qf_free()$/
qf_init	quickfix.c	/^qf_init()$/
qf_jump	quickfix.c	/^qf_jump(dir, errornr)$/
qf_list	quickfix.c	/^qf_list()$/
qf_mark_adjust	quickfix.c	/^qf_mark_adjust(line1, line2, inc)$/
qf_types	quickfix.c	/^qf_types(c, nr)$/
read_redo	getchar.c	/^read_redo(init)$/
read_stuff	getchar.c	/^read_stuff(advance)$/
readfile	fileio.c	/^readfile(fname, sfname, from, newfile, skip_lnum, /
redrawcmd	cmdline.c	/^redrawcmd()$/
redrawcmdline	cmdline.c	/^redrawcmdline()$/
redrawhelp	help.c	/^redrawhelp()$/
reg	regexp.c	/^reg(paren, flagp)$/
regatom	regexp.c	/^regatom(flagp)$/
regbranch	regexp.c	/^regbranch(flagp)$/
regc	regexp.c	/^regc(b)$/
regcomp	regexp.c	/^regcomp(exp)$/
regdump	regexp.c	/^regdump(r)$/
regexec	regexp.c	/^regexec(prog, string, at_bol)$/
reginsert	regexp.c	/^reginsert(op, opnd)$/
regmatch	regexp.c	/^regmatch(prog)$/
regnext	regexp.c	/^regnext(p)$/
regnode	regexp.c	/^regnode(op)$/
regoptail	regexp.c	/^regoptail(p, val)$/
regpiece	regexp.c	/^regpiece(flagp)$/
regprop	regexp.c	/^regprop(op)$/
regrepeat	regexp.c	/^regrepeat(p)$/
regsub	regsub.c	/^regsub(prog, source, dest, copy, magic)$/
regtail	regexp.c	/^regtail(p, val)$/
regtilde	regsub.c	/^regtilde(source, magic)$/
regtry	regexp.c	/^regtry(prog, string)$/
remove	unix.c	/^remove(buf)$/
rename	unix.c	/^rename(src, dest)$/
resettitle	archie.c	/^resettitle()$/
resizeConBufAndWindow	winnt.c	/^void            resizeConBufAndWindow(HANDLE hCons/
screen_char	screen.c	/^screen_char(p, row, col)$/
screen_del_lines	screen.c	/^screen_del_lines(off, row, nlines, end)$/
screen_fill	screen.c	/^screen_fill(start_row, end_row, start_col, end_col/
screen_ins_lines	screen.c	/^screen_ins_lines(off, row, nlines, end)$/
screen_msg	screen.c	/^screen_msg(msg, row, col)$/
screen_new_rows	window.c	/^screen_new_rows()$/
screen_outchar	screen.c	/^screen_outchar(c, row, col)$/
screen_start	screen.c	/^screen_start()$/
screen_valid	screen.c	/^screen_valid()$/
screenalloc	screen.c	/^screenalloc(clear)$/
screenclear	screen.c	/^screenclear()$/
screenclear2	screen.c	/^screenclear2()$/
scroll	winnt.c	/^scroll()$/
scroll_region_reset	term.c	/^scroll_region_reset()$/
scroll_region_set	term.c	/^scroll_region_set(wp)$/
scrolldown	screen.c	/^scrolldown(nlines)$/
scrollup	screen.c	/^scrollup(nlines)$/
searchc	search.c	/^searchc(c, dir, type, count)$/
searchit	search.c	/^searchit(pos, dir, str, count, end, message)$/
set_Changed	misccmds.c	/^set_Changed()$/
set_context_in_set_cmd	param.c	/^set_context_in_set_cmd(arg)$/
set_expand_context	cmdline.c	/^set_expand_context(firstc, buff)$/
set_highlight	screen.c	/^set_highlight(context)$/
set_indent	misccmds.c	/^set_indent(size, delete)$/
set_init	param.c	/^set_init()$/
set_keymap	amiga.c	/^set_keymap(name)$/
set_one_cmd_context	cmdline.c	/^set_one_cmd_context(firstc, buff)$/
set_redo_ins	getchar.c	/^set_redo_ins()$/
set_term	term.c	/^set_term(term)$/
set_window	msdos.c	/^set_window()$/
set_winsize	term.c	/^set_winsize(width, height, mustset)$/
set_x11_icon	unix.c	/^set_x11_icon(icon)$/
set_x11_title	unix.c	/^set_x11_title(title)$/
setaltfname	buffer.c	/^setaltfname(fname, sfname, lnum)$/
setcursor	term.c	/^setcursor()$/
setfname	buffer.c	/^setfname(fname, sfname, message)$/
setmark	mark.c	/^setmark(c)$/
setpcmark	mark.c	/^setpcmark()$/
setperm	amiga.c	/^setperm(name, perm)$/
settitle	archie.c	/^settitle(str)$/
settmode	term.c	/^settmode(raw)$/
shift_line	ops.c	/^shift_line(left, round, amount)$/
showmap	getchar.c	/^showmap(mp)$/
showmatch	search.c	/^showmatch(initc)$/
showmatches	cmdline.c	/^showmatches(buff)$/
showmode	screen.c	/^showmode()$/
showonep	param.c	/^showonep(p)$/
showparams	param.c	/^showparams(all)$/
showruler	screen.c	/^showruler(always)$/
sig_winch	unix.c	/^sig_winch()$/
skip_chars	search.c	/^skip_chars(class, dir)$/
skip_regexp	regexp.c	/^skip_regexp(p, dirc)$/
skipchr	regexp.c	/^skipchr()$/
skipspace	misccmds.c	/^skipspace(pp)$/
skiptodigit	misccmds.c	/^skiptodigit(pp)$/
skiptospace	misccmds.c	/^skiptospace(pp)$/
sleep	amiga.c	/^sleep(n)$/
smsg	message.c	/^smsg(s, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10)$/
sortcmp	amiga.c	/^sortcmp(a, b)$/
startPS	search.c	/^startPS(lnum, para, both)$/
start_arrow	edit.c	/^start_arrow()$/
start_highlight	screen.c	/^start_highlight()$/
start_redo	getchar.c	/^start_redo(count)$/
start_redo_ins	getchar.c	/^start_redo_ins()$/
start_stuff	getchar.c	/^start_stuff()$/
startinsert	ops.c	/^startinsert(initstr, startln, count)$/
starttermcap	term.c	/^starttermcap()$/
status_redraw_all	screen.c	/^status_redraw_all()$/
stop_arrow	edit.c	/^stop_arrow()$/
stop_highlight	screen.c	/^stop_highlight()$/
stop_insert	edit.c	/^stop_insert()$/
stop_redo_ins	getchar.c	/^stop_redo_ins()$/
stoptermcap	term.c	/^stoptermcap()$/
strchr	unix.h	/^# define strchr(ptr, c)			index((ptr), (c))$/
strcspn	regexp.c	/^strcspn(s1, s2)$/
strlowcpy	msdos.c	/^strlowcpy(d, s)$/
strnfcpy	regsub.c	/^strnfcpy(f, d, s, n)$/
strnsave	alloc.c	/^strnsave(string, len)$/
strrchr	unix.h	/^# define strrchr(ptr, c)		rindex((ptr), (c))$/
strsave	alloc.c	/^strsave(string)$/
strsize	charset.c	/^strsize(s)$/
stuffReadbuff	getchar.c	/^stuffReadbuff(s)$/
stuff_empty	getchar.c	/^stuff_empty()$/
stuff_inserted	edit.c	/^stuff_inserted(c, count, no_esc)$/
stuff_yank	ops.c	/^stuff_yank(bufname, p)$/
stuffcharReadbuff	getchar.c	/^stuffcharReadbuff(c)$/
stuffnumReadbuff	getchar.c	/^stuffnumReadbuff(n)$/
swapchar	ops.c	/^swapchar(pos)$/
termcapinit	term.c	/^termcapinit(term)$/
textattr	winnt.c	/^textattr(int attr)$/
tgetch	winnt.c	/^int             tgetch()$/
tgetent	termlib.c	/^tgetent(tbuf, term)$/
tgetflag	termlib.c	/^tgetflag(id)$/
tgetnum	termlib.c	/^tgetnum(id)$/
tgetstr	termlib.c	/^tgetstr(id, buf)$/
tgoto	term.c	/^tgoto(cm, x, y)$/
tinit	termlib.c	/^tinit(name)$/
tltoa	term.c	/^tltoa(i)$/
tputs	termlib.c	/^tputs(cp, affcnt, outc)$/
transchar	charset.c	/^transchar(c)$/
ttest	term.c	/^ttest(pairs)$/
u_alloc_line	undo.c	/^u_alloc_line(size)$/
u_blockalloc	undo.c	/^u_blockalloc(size)$/
u_blockfree	undo.c	/^u_blockfree(buf)$/
u_clearall	undo.c	/^u_clearall(buf)$/
u_clearline	undo.c	/^u_clearline()$/
u_free_line	undo.c	/^u_free_line(ptr)$/
u_freeentry	undo.c	/^u_freeentry(uep, n)$/
u_freelist	undo.c	/^u_freelist(uhp)$/
u_getbot	undo.c	/^u_getbot()$/
u_inssub	undo.c	/^u_inssub(lnum)$/
u_redo	undo.c	/^u_redo(count)$/
u_save	undo.c	/^u_save(top, bot)$/
u_save_cursor	undo.c	/^u_save_cursor()$/
u_save_line	undo.c	/^u_save_line(lnum)$/
u_savecommon	undo.c	/^u_savecommon(top, bot, newbot)$/
u_savedel	undo.c	/^u_savedel(lnum, nlines)$/
u_saveline	undo.c	/^u_saveline(lnum)$/
u_savesub	undo.c	/^u_savesub(lnum)$/
u_sync	undo.c	/^u_sync()$/
u_unchanged	undo.c	/^u_unchanged(buf)$/
u_undo	undo.c	/^u_undo(count)$/
u_undo_end	undo.c	/^u_undo_end()$/
u_undoline	undo.c	/^u_undoline()$/
u_undoredo	undo.c	/^u_undoredo()$/
ungetchr	regexp.c	/^ungetchr()$/
unregc	regexp.c	/^unregc()$/
unset_Changed	misccmds.c	/^unset_Changed(buf)$/
updateScreen	screen.c	/^updateScreen(type)$/
updateline	screen.c	/^updateline()$/
updatescript	getchar.c	/^updatescript(c)$/
usage	main.c	/^usage(n)$/
vbell	winnt.c	/^vbell()$/
vgetc	getchar.c	/^vgetc()$/
vgetorpeek	getchar.c	/^vgetorpeek(advance)$/
vim_chdir	msdos.c	/^vim_chdir(path)$/
vim_delay	amiga.c	/^vim_delay()$/
vim_dirname	amiga.c	/^vim_dirname(buf, len)$/
vim_fgets	fileio.c	/^vim_fgets(buf, size, fp, lnum)$/
vim_remove	msdos.c	/^vim_remove(name)$/
vim_strncpy	cmdline.c	/^vim_strncpy(to, from, len)$/
vim_strnicmp	alloc.c	/^vim_strnicmp(s1, s2, len)$/
vimgetenv	amiga.c	/^vimgetenv(var)$/
vpeekc	getchar.c	/^vpeekc()$/
wait_return	message.c	/^wait_return(redraw)$/
win_alloc	window.c	/^win_alloc(after)$/
win_alloc_lsize	window.c	/^win_alloc_lsize(wp)$/
win_append	window.c	/^win_append(after, wp)$/
win_comp_pos	window.c	/^win_comp_pos()$/
win_comp_scroll	window.c	/^win_comp_scroll(wp)$/
win_copy_options	param.c	/^win_copy_options(wp_from, wp_to)$/
win_del_lines	screen.c	/^win_del_lines(wp, row, nlines, invalid, mayclear)$/
win_enter	window.c	/^win_enter(wp, undo_sync)$/
win_equal	window.c	/^win_equal(next_curwin, redraw)$/
win_exchange	window.c	/^win_exchange(Prenum)$/
win_free	window.c	/^win_free(wp)$/
win_free_lsize	window.c	/^win_free_lsize(wp)$/
win_init	window.c	/^win_init(wp)$/
win_ins_lines	screen.c	/^win_ins_lines(wp, row, nlines, invalid, mayclear)$/
win_line	screen.c	/^win_line(wp, lnum, startrow, endrow)$/
win_redr_ruler	screen.c	/^win_redr_ruler(wp, always)$/
win_redr_status	screen.c	/^win_redr_status(wp)$/
win_remove	window.c	/^win_remove(wp)$/
win_resize_off	amiga.c	/^win_resize_off()$/
win_resize_on	amiga.c	/^win_resize_on()$/
win_rest_invalid	screen.c	/^win_rest_invalid(wp)$/
win_rotate	window.c	/^win_rotate(upwards, count)$/
win_setheight	window.c	/^win_setheight(height)$/
win_split	window.c	/^win_split(new_height, redraw)$/
win_update	screen.c	/^win_update(wp)$/
windgoto	term.c	/^windgoto(row, col)$/
write_buf	fileio.c	/^write_buf(fd, buf, len)$/
